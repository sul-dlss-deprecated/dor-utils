#!/usr/bin/env ruby
require_relative '../config/boot'

class ObjectMerge

  def initialize
    if(Dor::Config.merge_log)
      log = Dor::Config.merge_log
    else
      log = STDOUT
    end
    @logger = Logger.new log
  end

  # assumes ARGV.first is path to CSV file of objects to merge
  def merge_csv
    @csv = CSV.read ARGV.first
    @csv.each do |row|
      merge_row row
    end
  end

  def merge_row row
    begin
      ids = row.map do |id|
        if id =~ /^druid:/
          id
        else
          "druid:#{id}"
        end
      end
      primary = row.shift
      ms = Dor::MergeService.merge_into_primary primary, row, @logger
    rescue => e
      @logger.error "Problem trying to merge into primary #{primary} : #{e.inspect}"
      @logger.error e.backtrace.join "\n"
    end
  end
end

ObjectMerge.new.merge_csv
