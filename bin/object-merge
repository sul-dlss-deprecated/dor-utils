#!/usr/bin/env ruby
USAGE = "Usage: object-merge.rb [-e ENVIRONMENT] ids-to-merge.csv \"Decomission tag\""
require_relative '../config/boot'

class ObjectMerge

  def initialize
    log = File.expand_path(File.dirname(__FILE__) + "/../log/merge.log")
    @logger = Logger.new log
    @logger.formatter = proc { |severity, datetime, progname, msg|
      "#{severity} #{datetime}[#{Process.pid}]: #{msg}\n"
    }
  end

  # assumes ARGV.first is path to CSV file of objects to merge
  def merge_csv args
    if args.size != 2
      puts USAGE
      exit
    end
    @csv = CSV.read args.shift
    @csv.each do |row|
      merge_row row
    end
    @tag = args.shift
  end

  def merge_row row
    begin
      ids = row.map do |id|
        if id =~ /^druid:/
          id
        else
          "druid:#{id}"
        end
      end
      primary = row.shift
      ms = Dor::MergeService.merge_into_primary primary, row, @tag, @logger
    rescue => e
      @logger.error "Problem trying to merge into primary #{primary} : #{e.inspect}"
      @logger.error e.backtrace.join "\n"
    end
  end
end

ObjectMerge.new.merge_csv ARGV
